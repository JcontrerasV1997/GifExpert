{"version":3,"sources":["components/Dummies/AddCategory.js","components/Dummies/GifGridItem.js","helpers/getGifs.js","components/Dummies/GifGrid.js","hooks/useFetchGifs.js","components/Smarts/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"qJAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACE,8BACE,sBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC9BN,GAAcF,GAAe,SAACS,GAAD,OAAgBP,GAAhB,mBAA8BO,OACzDN,EAAc,MAMhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAflB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,e,QCNdG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACE,sBAAKC,UAAU,2DAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,8BCLIK,EAAO,uCAAG,WAAOZ,GAAP,uBAAAa,EAAA,6DACdL,EADc,0FAC2EM,UAAUd,GADrF,gDAEDe,MAAMP,GAFL,cAEdQ,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QARlB,kBAWdW,GAXc,4CAAH,sDCGRK,EAAU,SAAC,GAAkB,IAAhBxB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdR,mBAAS,CACjC0B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAkBxC,OAXAC,qBAAU,WACRhB,EAAQZ,GAAU6B,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPT,KAAMY,EACNL,SAAS,MAEV,UAEJ,CAACzB,IAEG0B,EDd2BM,CAAahC,GAAjCsB,EAFyB,EAE/BJ,KAAcO,EAFiB,EAEjBA,QAEtB,OACE,qCACE,qBAAIhB,UAAU,oCAAd,cAAoDT,EAApD,OACCyB,GAAW,mBAAGhB,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACGa,EAAOF,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,aEXnB2B,EAAe,WAAM,MAEIzC,mBAAS,CAAC,cAFd,mBAEzB0C,EAFyB,KAEbC,EAFa,KAOhC,OACE,qCACE,8CACA,cAAC,EAAD,CAAa5C,cAAe4C,IAC5B,uBACA,6BAEGD,EAAWd,KAAI,SAACpB,GAAD,OAEd,aADA,CACC,EAAD,CAAwBA,SAAUA,GAApBA,YCfxBoC,IAASC,OAAO,cAAC,EAAD,IAEAC,SAASC,eAAe,U","file":"static/js/main.888231b0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setinputValue] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if ( inputValue.trim().length > 2) {\r\n      inputValue && setCategories( (category) => [ inputValue,...category,] );\r\n        setinputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n"," //Metodo que recorre una api\r\n//  esto regresa una promesa que resuelve la coleccion\r\n export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=9ICmnzq1JsbrjnsodRdeDHrub6iz52rX&q=${encodeURI(category)}&limit=10&offset=0&rating=g&lang=en`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n   return gifs;\r\n  };\r\n","import React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport \"../../index.css\";\r\n\r\nimport { useFetchGifs } from \"../../hooks/useFetchGifs\";\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  \r\n  //los effects no pueden ser async\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"../Dummies/AddCategory\";\r\nimport { GifGrid } from \"../Dummies/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  // const categories= ;\r\n  const [categories, setcategories] = useState([\"One Punch\"]); //estado inicial\r\n\r\n  //   const handleAdd = () => {\r\n  //     setcategories(['Narutox',...categories]);\r\n  //   };\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setcategories} />\r\n      <hr />\r\n      <ol>\r\n        {/* Iteracion por map */}\r\n        {categories.map((category) => (\r\n          // return <li key={ category }> {category} </li>;\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { GifExpertApp } from \"./components/Smarts/GifExpertApp\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<GifExpertApp>\r\n                </GifExpertApp>, \r\n                document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}